// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MobileConnectionApp.DataBase.MainOfficeDataBase;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MobileConnectionApp.Migrations
{
    [DbContext(typeof(MainOfficeContext))]
    [Migration("20221215195734_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Caller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Balance")
                        .HasColumnType("integer");

                    b.Property<int?>("ContractId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateLastPay")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateToPay")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.ToTable("Callers");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("LocationId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("PassportNumber")
                        .HasColumnType("integer");

                    b.Property<int>("PassportSeria")
                        .HasColumnType("integer");

                    b.Property<string>("Patronymic")
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DateLastUpdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("NumberId")
                        .HasColumnType("integer");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int?>("SimId")
                        .HasColumnType("integer");

                    b.Property<int?>("TarifId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("NumberId");

                    b.HasIndex("SimId");

                    b.HasIndex("TarifId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<string>("Display")
                        .HasColumnType("text");

                    b.Property<string>("DisplayDiagonal")
                        .HasColumnType("text");

                    b.Property<int?>("LocationId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<string>("Ram")
                        .HasColumnType("text");

                    b.Property<string>("Rom")
                        .HasColumnType("text");

                    b.Property<int?>("TypeDeviceId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("TypeDeviceId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.MapTarifService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ServiceId")
                        .HasColumnType("integer");

                    b.Property<int?>("TarifId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("TarifId");

                    b.ToTable("MapTarifServices");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Number", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<int?>("PrestigeNumberId")
                        .HasColumnType("integer");

                    b.Property<int?>("StateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PrestigeNumberId");

                    b.HasIndex("StateId");

                    b.ToTable("Numbers");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.PrestigeNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("PrestigeNumbers");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateSale")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("integer");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("DeviceId");

                    b.ToTable("Receipts");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Sim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("LocationId")
                        .HasColumnType("integer");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<int?>("StateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("StateId");

                    b.ToTable("Sims");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Tarif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tarifs");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.TypeDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TypeDevices");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("LocationId")
                        .HasColumnType("integer");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Patronymic")
                        .HasColumnType("text");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Caller", b =>
                {
                    b.HasOne("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Client", b =>
                {
                    b.HasOne("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Contract", b =>
                {
                    b.HasOne("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Number", "Number")
                        .WithMany()
                        .HasForeignKey("NumberId");

                    b.HasOne("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Sim", "Sim")
                        .WithMany()
                        .HasForeignKey("SimId");

                    b.HasOne("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Tarif", "Tarif")
                        .WithMany()
                        .HasForeignKey("TarifId");

                    b.Navigation("Client");

                    b.Navigation("Number");

                    b.Navigation("Sim");

                    b.Navigation("Tarif");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Device", b =>
                {
                    b.HasOne("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.TypeDevice", "TypeDevice")
                        .WithMany()
                        .HasForeignKey("TypeDeviceId");

                    b.Navigation("Location");

                    b.Navigation("TypeDevice");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.MapTarifService", b =>
                {
                    b.HasOne("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId");

                    b.HasOne("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Tarif", "Tarif")
                        .WithMany()
                        .HasForeignKey("TarifId");

                    b.Navigation("Service");

                    b.Navigation("Tarif");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Number", b =>
                {
                    b.HasOne("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.PrestigeNumber", "PrestigeNumber")
                        .WithMany()
                        .HasForeignKey("PrestigeNumberId");

                    b.HasOne("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.Navigation("PrestigeNumber");

                    b.Navigation("State");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Receipt", b =>
                {
                    b.HasOne("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId");

                    b.Navigation("Client");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Sim", b =>
                {
                    b.HasOne("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId");

                    b.Navigation("Location");

                    b.Navigation("State");
                });

            modelBuilder.Entity("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.User", b =>
                {
                    b.HasOne("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("MobileConnectionApp.DataBase.MainOfficeDataBase.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Location");

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
